{\rtf1\ansi\ansicpg1252\cocoartf2513
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fnil\fcharset0 Menlo-Bold;\f1\fnil\fcharset0 Menlo-Regular;}
{\colortbl;\red255\green255\blue255;\red155\green35\blue147;\red255\green255\blue255;\red0\green0\blue0;
\red11\green79\blue121;\red57\green0\blue160;\red15\green104\blue160;\red196\green26\blue22;\red28\green70\blue74;
\red50\green109\blue116;\red108\green54\blue169;}
{\*\expandedcolortbl;;\csgenericrgb\c60759\c13753\c57628;\csgenericrgb\c100000\c100000\c100000;\csgenericrgb\c0\c0\c0\c85000;
\csgenericrgb\c4314\c30980\c47451;\csgenericrgb\c22454\c0\c62803;\csgenericrgb\c5882\c40784\c62745;\csgenericrgb\c77000\c10200\c8600;\csgenericrgb\c10981\c27276\c28869;
\csgenericrgb\c19418\c42935\c45455;\csgenericrgb\c42190\c21278\c66379;}
\margl1440\margr1440\vieww24540\viewh14840\viewkind0
\deftab593
\pard\tx593\pardeftab593\pardirnatural\partightenfactor0

\f0\b\fs24 \cf2 \cb3 import
\f1\b0 \cf4  UIKit\

\f0\b \cf2 import
\f1\b0 \cf4  Combine\
\

\f0\b \cf2 class
\f1\b0 \cf4  \cf5 AppSettings\cf4 :  \cf6 ObservableObject\cf4  \{\
    @\cf6 Published\cf4  
\f0\b \cf2 var
\f1\b0 \cf4  \cf7 language\cf4  = \cf8 "English"\cf4 \
\}\
\

\f0\b \cf2 class
\f1\b0 \cf4  \cf5 Environment\cf4  \{\
    
\f0\b \cf2 static
\f1\b0 \cf4  
\f0\b \cf2 let
\f1\b0 \cf4  \cf7 updateChanged\cf4  = \cf6 Notification\cf4 .\cf6 Name\cf4 (\cf8 "EnvironmentChangeUpdate"\cf4 )\
    
\f0\b \cf2 static
\f1\b0 \cf4  
\f0\b \cf2 let
\f1\b0 \cf4  \cf7 shared\cf4  = \cf9 Environment\cf4 ()\
    \
    
\f0\b \cf2 private
\f1\b0 \cf4  
\f0\b \cf2 var
\f1\b0 \cf4  \cf7 sinks\cf4   = [\cf6 AnyCancellable\cf4 ]()\
    \
    
\f0\b \cf2 var
\f1\b0 \cf4  \cf7 values\cf4  = [
\f0\b \cf2 Any
\f1\b0 \cf4 ]()\
    \
    
\f0\b \cf2 private
\f1\b0 \cf4  
\f0\b \cf2 init
\f1\b0 \cf4 () \{ \}\
    \
    \
    
\f0\b \cf2 func
\f1\b0 \cf4  \cf7 register\cf4 <\cf5 T\cf4 : \cf6 ObservableObject\cf4 >(
\f0\b \cf2 _
\f1\b0 \cf4  value: \cf9 T\cf4 ) \{\
        \cf10 values\cf4 .\cf11 append\cf4 (value)\
        \
        
\f0\b \cf2 let
\f1\b0 \cf4  sink = value.\cf11 objectWillChange\cf4 .\cf11 sink\cf4  \{ 
\f0\b \cf2 _
\f1\b0 \cf4  
\f0\b \cf2 in
\f1\b0 \cf4 \
            \cf6 DispatchQueue\cf4 .\cf11 main\cf4 .\cf11 async\cf4  \{\
                \cf6 NotificationCenter\cf4 .\cf11 default\cf4 .\cf11 post\cf4 (name: 
\f0\b \cf2 Self
\f1\b0 \cf4 .\cf10 updateChanged\cf4 , object: value)\
            \}\
        \}\
        \cf10 sinks\cf4 .\cf11 append\cf4 (sink)\
    \}\
\}\
\
\

\f0\b \cf2 protocol
\f1\b0 \cf4  \cf5 GlobalUpdating\cf4  \{\
    
\f0\b \cf2 func
\f1\b0 \cf4  \cf7 update\cf4 ()\
\}\
\

\f0\b \cf2 extension
\f1\b0 \cf4  \cf9 GlobalUpdating\cf4  \{\
    
\f0\b \cf2 func
\f1\b0 \cf4  \cf7 registerForUpdate\cf4 () \{\
        \cf10 update\cf4 ()\
    \}\
\}\
\

\f0\b \cf2 @propertyWrapper
\f1\b0 \cf4  
\f0\b \cf2 struct
\f1\b0 \cf4  \cf5 Global\cf4 <\cf5 ObjectType\cf4 : \cf6 ObservableObject\cf4 > \{\
    
\f0\b \cf2 var
\f1\b0 \cf4  \cf7 wrappedValue\cf4 : \cf9 ObjectType\cf4 \
\
    
\f0\b \cf2 init
\f1\b0 \cf4 () \{\
        
\f0\b \cf2 if
\f1\b0 \cf4  
\f0\b \cf2 let
\f1\b0 \cf4  value = \cf9 Environment\cf4 .\cf10 shared\cf4 .\cf10 values\cf4 .\cf11 first\cf4 (where: \{ $0 
\f0\b \cf2 is
\f1\b0 \cf4  \cf9 ObjectType\cf4  \}) 
\f0\b \cf2 as
\f1\b0 \cf4 ? \cf9 ObjectType\cf4  \{\
            
\f0\b \cf2 self
\f1\b0 \cf4 .\cf10 wrappedValue\cf4  = value\
        \} 
\f0\b \cf2 else
\f1\b0 \cf4  \{\
            \cf11 fatalError\cf4 (\cf8 "Missing Type in Environment"\cf4 )\
        \}\
            \
    \}\
\}\
\
\

\f0\b \cf2 class
\f1\b0 \cf4  \cf5 SecondViewController\cf4 : \cf6 UIViewController\cf4 , \cf9 GlobalUpdating\cf4  \{\
    \
    @\cf9 Global\cf4  
\f0\b \cf2 var
\f1\b0 \cf4  \cf7 appSettings\cf4 : \cf9 AppSettings\cf4 \
    \
    
\f0\b \cf2 func
\f1\b0 \cf4  \cf7 update\cf4 () \{\
        \cf11 print\cf4 (\cf8 "Value of app Settings in second view controller is \cf4 \\(\cf10 appSettings\cf4 .\cf10 language\cf4 )\cf8 "\cf4 )\
    \}\
    \
    
\f0\b \cf2 override
\f1\b0 \cf4  
\f0\b \cf2 func
\f1\b0 \cf4  \cf7 viewDidLoad\cf4 () \{\
        
\f0\b \cf2 super
\f1\b0 \cf4 .\cf11 viewDidLoad\cf4 ()\
        \cf10 registerForUpdate\cf4 ()\
    \}\
    \
\}\
\
\
\
\

\f0\b \cf2 class
\f1\b0 \cf4  \cf5 ViewController\cf4 : \cf6 UIViewController\cf4 , \cf9 GlobalUpdating\cf4  \{\
    \
    \
    @\cf9 Global\cf4  
\f0\b \cf2 var
\f1\b0 \cf4  \cf7 appSettings\cf4 : \cf9 AppSettings\cf4 \
    \
    
\f0\b \cf2 func
\f1\b0 \cf4  \cf7 update\cf4 () \{\
        \cf11 print\cf4 (\cf8 "Value of app Settings in ViewController controller is \cf4 \\(\cf10 appSettings\cf4 .\cf10 language\cf4 )\cf8 "\cf4 )\
    \}\
    \
    \
    
\f0\b \cf2 override
\f1\b0 \cf4  
\f0\b \cf2 func
\f1\b0 \cf4  \cf7 viewDidLoad\cf4 () \{\
        
\f0\b \cf2 super
\f1\b0 \cf4 .\cf11 viewDidLoad\cf4 ()\
        \cf10 registerForUpdate\cf4 ()\
        \
        
\f0\b \cf2 let
\f1\b0 \cf4  second = \cf9 SecondViewController\cf4 ()\
        \
        \cf11 print\cf4 (\cf8 "Value from second view controller = \cf4 \\(second.\cf10 appSettings\cf4 .\cf10 language\cf4 )\cf8 "\cf4 )\
        \
        \cf10 appSettings\cf4 .\cf10 language\cf4  = \cf8 "Hindi"\cf4 \
        \
        \cf11 print\cf4 (\cf8 "Value from second view controller after change = \cf4 \\(second.\cf10 appSettings\cf4 .\cf10 language\cf4 )\cf8 "\cf4 )\
      \
    \}\
\}\
}